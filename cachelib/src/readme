Points to remember:
1) whenever there is get or put operation on Cache,
driver class will call EvictionPolicy keyAccessed() so that
evictionPolicy will update the positioning of key based on EvictionPolicy
implementation

2) when Storage is full during put(K,V), Driver class will call
evictKey() of EvictionPolicy and system will evict Key based on Implementation

---------------------------------------------
Driver class

    Cache<K,V>
        - Storage<K,V>
        - EvictionPolicy<K>

            -- get(K key)
            -- put(K key,V value)

---------------------------------------------
Interface

   EvictionPolicy<K>

        -- keyAccessed(K key)
        -- K evictKey()

---------------------------------------------
Deals with Keys only, since all Impl classes differ in positioning
of Keys

LRUEvictionPolicy<K>
        - DoublyLinkedList<DoublyNode> dll;
        - HashMap<K, DoublyNode<K>> hashMap;
            -- keyAccessed(K key)
            -- K evictKey()

---------------------------------------------
DoublyLinkedList<E>
        --  DoublyNode<E> dummyHead;
        --  DoublyNode<E> dummyTail;

DoublyNode<E>

        --  DoublyNode<E> prev;
        --  DoublyNode<E> next;
        --  E             element;